-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);

SELECt* FROM BIT_DB.Spotifydata;

--Here I selected the top ten tracks by popularity, with their artists
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10; 

--Next I determined the avg popularity, dancebility, and enerby by artist and track
SELECT track_name,
 artist_name, 
 avg(popularity),
 avg(dancebility),
 avg(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--Next I calculate the average popularity for the artists in the table. Then, for every artist with an average popularity of 90 or above, I show their name, their average popularity, and label them as a “Top Star” using CTE

WITH popularity_average_CTE AS (
 SELECT s.artist_name,
 avg(s.popularity) as average_popularity
FROM SpotifyData s
GROUP BY s.artist_name
)

SELECT artist_name,
       average_popularity,
       'Top Star' AS tag
   FROM popularity_average_CTE
   WHERE average_popularity>=90;
 
